# Project Brick by Brick: Build out and test creation of VPC, subnet, 2 EC2 instances, etc.

# Define Providers and features
terraform {

  required_version = ">=0.12"

  required_providers {
    aws = {
      source  = "hashicorp/aws"
      version = "~> 3.0"
    }
  }
}

provider "aws" {
  region = var.region
}

# Create VPC
resource "aws_vpc" "tfvpcname" {
  cidr_block       = "10.0.0.0/16"
  enable_dns_hostnames = true

  tags = {
    Name = var.vnet_name
  }
}

# Create subnet - Both EC2 instances will be on the same subnet.
resource "aws_subnet" "tfsubnet1name" {
  vpc_id            = aws_vpc.tfvpcname.id
  cidr_block        = "10.0.0.0/24"
  availability_zone = var.availability_zone

  tags = {
    Name = var.subnet_name
  }
}

# Create security group
resource "aws_security_group" "tfsgname" {
  name        = var.nsg_name
  description = "Security group for Terraform"

  vpc_id = aws_vpc.tfvpcname.id

  # Inbound rules
  ingress {
    from_port   = 3389
    to_port     = 3389
    protocol    = "tcp"
    cidr_blocks = ["0.0.0.0/0"]
  }

  ingress {
    from_port   = 22
    to_port     = 22
    protocol    = "tcp"
    cidr_blocks = ["0.0.0.0/0"]
  }

  # Outbound rule
  egress {
    from_port   = 0
    to_port     = 0
    protocol    = "-1"
    cidr_blocks = ["0.0.0.0/0"]
  }

  tags = {
    Name = var.nsg_name
  }
}

# Create EC2 instance 1
resource "aws_instance" "tfmyfstlinvm001" {
  ami                    = var.instance_ami
  instance_type          = var.instance_type
  subnet_id              = aws_subnet.tfsubnet1name.id
  vpc_security_group_ids = [aws_security_group.tfsgname.id]
  key_name               = var.ssh_key_name

  tags = {
    Name = var.vm1Name
  }

  # Assuming Ubuntu 18.04 LTS AMI
  provisioner "remote-exec" {
    inline = [
      "sudo apt update",
      "sudo apt install -y nginx"
    ]

    connection {
      type        = "ssh"
      user        = var.admin_name
      private_key = file("~/.ssh/id_rsa")
      host        = self.public_ip
    }
  }
}

# Create EC2 instance 2
resource "aws_instance" "tfmyfstlinvm002" {
  ami                    = var.instance_ami
  instance_type          = var.instance_type
  subnet_id              = aws_subnet.tfsubnet1name.id
  vpc_security_group_ids = [aws_security_group.tfsgname.id]
  key_name               = var.ssh_key_name

  tags = {
    Name = var.vm2Name
  }

  # Assuming Ubuntu 18.04 LTS AMI
  provisioner "remote-exec" {
    inline = [
      "sudo apt update",
      "sudo apt install -y apache2"
    ]

    connection {
      type        = "ssh"
      user        = var.user_name
      private_key = file("~/.ssh/id_rsa")
      host        = self.public_ip
    }
  }
}
